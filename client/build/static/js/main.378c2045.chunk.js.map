{"version":3,"sources":["assets/spinner.gif","utils/helpers.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/OrderHistory.js","pages/Success.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","reducer","state","action","type","_objectSpread","cartOpen","cart","map","product","purchaseQuantity","newState","filter","length","concat","_toConsumableArray","products","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","_ref","value","initialState","props","_objectWithoutProperties","_excluded","_useProductReducer","useReducer","_useProductReducer2","_slicedToArray","dispatch","React","createElement","Object","assign","useStoreContext","useContext","ProductItem","item","image","name","price","quantity","_useStoreContext","_useStoreContext2","className","Link","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","parseInt","QUERY_CHECKOUT","gql","_templateObject","_taggedTemplateLiteral","QUERY_PRODUCTS","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","ProductList","_useQuery","useQuery","loading","data","useEffect","forEach","then","category","key","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","aria-label","removeFromCart","AuthService","_classCallCheck","_createClass","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","removeItem","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","record","__await","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCheckout","toggleCart","_getCart","_asyncToGenerator","_callee","_context","apply","arguments","getCart","res","redirectToCheckout","sessionId","checkout","session","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","variables","arial-label","Home","Detail","useParams","_useState","useState","_useState2","currentProduct","setCurrentProduct","indexedProducts","Fragment","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Switch","Route","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.378c2045.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","export function pluralize(name, count) {\n  if (count === 1) {\n    return name\n  }\n  return name + 's'\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    // open connection to the database `shop-shop` with the version of 1\n    const request = window.indexedDB.open('shop-shop', 1);\n\n    // create variables to hold reference to the database, transaction (tx), and  object store\n    let db, tx, store;\n\n    // if version has changed  ( or it this is the first time using the database), run this method and create the three object stores\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      // create object store for each type of data and set \"primary\" key index to be the `_id` of the data\n      db.createObjectStore('products', { keyPath: '_id'});\n      db.createObjectStore('categories',{ keyPath: '_id'});\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    // handle any errors with connecting\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n    \n    //on database open success\n    request.onsuccess = function(e) {\n      // save a reference of the database to the `db` variable\n      db = request.result;\n      // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\n      tx = db.transaction(storeName, 'readwrite');\n      // save a reference to that object store\n      store = tx.objectStore(storeName);\n\n      // if there's any errors, let us know\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;      \n      }\n      // when the transaction is complete, close the connection\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}","import { useReducer } from 'react';\n\nimport{\n    UPDATE_PRODUCTS,\n    UPDATE_CATEGORIES,\n    UPDATE_CURRENT_CATEGORY,\n    ADD_TO_CART,\n    ADD_MULTIPLE_TO_CART,\n    REMOVE_FROM_CART,\n    UPDATE_CART_QUANTITY,\n    CLEAR_CART,\n    TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case TOGGLE_CART:\n            return {\n                ...state,\n                cartOpen: !state.cartOpen\n            };\n        case CLEAR_CART:\n            return {\n                ...state,\n                cartOpen: false,\n                cart: []\n            };\n        case UPDATE_CART_QUANTITY:\n            return {\n                ...state,\n                cartOpen: true,\n                cart: state.cart.map(product => {\n                    if(action._id === product._id) {\n                        product.purchaseQuantity = action.purchaseQuantity;\n                    }\n                    return product;\n                })\n            };\n        case REMOVE_FROM_CART:\n            let newState = state.cart.filter(product => {\n                return product._id !== action._id;\n            });\n            return {\n                ...state,\n                cartOpen: newState.length > 0,\n                cart: newState\n            };\n\n        case ADD_MULTIPLE_TO_CART:\n            return {\n                ...state,\n                cart: [...state.cart, ...action.products],\n            };\n\n        case ADD_TO_CART:\n            return {\n                ...state,\n                cartOpen: true,\n                cart: [...state.cart, action.product]\n            };\n        // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n        case UPDATE_PRODUCTS:\n            return {\n                ...state,\n                products: [...action.products],\n            };\n        // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated products array\n        case UPDATE_CATEGORIES:\n            return {\n                ...state,\n                categories: [...action.categories]\n            };\n        case UPDATE_CURRENT_CATEGORY:\n            return {\n                ...state,\n                currentCategory: action.currentCategory\n            };    \n            // if it's none of these actions, do not update state at all and keep things the same!\n            default:\n                return state;\n    }\n};\n\nexport function useProductReducer(initialState) {\n    return useReducer(reducer, initialState);\n}","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const TOGGLE_CART = 'TOGGLE_CART';","import React, { createContext, useContext } from 'react';\nimport { useProductReducer } from './reducers';\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useProductReducer({\n        products: [],\n        categories: [],\n        cart: [],\n        cartOpen: false,\n        currentCategory: '',\n    });\n    // use this to confirm it works!\n    console.log(state);\n    return <Provider value={[state, dispatch]} {...props} />\n}\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\";\n\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\n\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n  \n  const [state, dispatch] = useStoreContext();\n\n  const {cart} = state;\n\n  const addToCart = () => {\n\n    // find the cart item with the matching id\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n\n    // if there was a match, call UPDATE with a new purchase quantity\n    if (itemInCart){\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) +1\n      });\n    } else {\n    dispatch({\n      type: ADD_TO_CART,\n      product: { ...item, purchaseQuantity: 1 }\n    });\n\n    idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n  }\n};\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n  `;\n  \nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ProductItem from '../ProductItem';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\n\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ProductList() {\n  const [state, dispatch] =useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    // if there's data to be stored\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      // but let's also take each product and save it to  IndexedDB using the helper function\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n      // add else if to check if `loading` is undefined in `useQuery()` Hook\n    } else if (!loading) {\n        // since we're offline, get all of the data form the `products`\n        idbPromise('products', 'get').then((products) => {\n          // use retrieved data to set global state for offline browsing\n          dispatch({\n            type: UPDATE_PRODUCTS,\n            products: products\n          });\n        });\n      }\n  }, [data, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\n\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n   const [state, dispatch] = useStoreContext();\n\n   const { categories } = state;\n\n   const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n   useEffect(() => {\n    // if categoryData exists or has changed fom the response of useQuery, then run dispatch()\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to dispatch\n     dispatch({\n      type: UPDATE_CATEGORIES,\n      categories: categoryData.categories\n     });\n     categoryData.categories.forEach(category => {\n      idbPromise('categories', 'put', category);\n     });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n   }, [categoryData, dispatch]);\n\n   const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n   };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nconst CartItem = ({ item }) => {\n    const [, dispatch] = useStoreContext();\n\n    const removeFromCart = item => {\n        dispatch({\n            type: REMOVE_FROM_CART,\n            _id: item._id\n        });\n        idbPromise('cart', 'delete', { ...item });\n\n    };\n\n    const onChange = (e) => {\n        const value = e.target.value;\n\n        if (value === '0') {\n            dispatch({\n                type: REMOVE_FROM_CART,\n                _id: item._id\n            });\n\n            idbPromise('cart', 'delete', { ...item });\n        } else {\n            dispatch({\n                type: UPDATE_CART_QUANTITY,\n                _id: item._id,\n                purchaseQuantity: parseInt(value)\n            });\n\n            idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n        }\n    };\n    return (\n        <div className='flex-row'>\n            <div>\n                <img\n                  src={`/images/${item.image}`}\n                  alt=''\n                />  \n            </div>\n            <div>\n                <div>{item.name}, ${item.price}</div>\n                <div>\n                    <span>Qty:</span>\n                    <input\n                    type='number'\n                    placeholder='1'\n                    value={item.purchaseQuantity}\n                    onChange={onChange}\n                    />\n                    <span\n                      role='img'\n                      aria-label='trash'\n                      onClick={() => removeFromCart(item)}\n                    >\n                     🗑️\n                    </span>  \n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, {useEffect } from 'react';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport './style.css';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n    const [state, dispatch] = useStoreContext();\n    const [getCheckout, { data }] = useLazyQuery((QUERY_CHECKOUT));\n\n\n    function toggleCart() {\n        dispatch({ type: TOGGLE_CART });\n    }\n\n    function calculateTotal() {\n        let sum = 0;\n        state.cart.forEach(item => {\n            sum += item.price * item.purchaseQuantity;\n        });\n        return sum.toFixed(2);\n    }\n    function submitCheckout() {\n        const productIds = [];\n        getCheckout({\n            variables: { products: productIds }\n        });\n\n        state.cart.forEach((item) => {\n            for (let i = 0; i < item.purchaseQuantity; i++) {\n                productIds.push(item._id);\n            }\n        });\n    }\n    useEffect(() => {\n        async function getCart() {\n            const cart = await idbPromise('cart', 'get');\n            dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n        };\n\n        if (!state.cart.length) {\n            getCart();\n        }\n    }, [state.cart.length, dispatch]);\n    useEffect (() => {\n        if (data) {\n            stripePromise.then((res) => {\n                res.redirectToCheckout({ sessionId: data.checkout.session });\n            });\n        }\n    }, [data]);\n    if (!state.cartOpen) {\n        return (\n            <div className='cart-closed' onClick={toggleCart}>\n                <span\n                role='img'\n                aria-label='trash'>🛒</span>\n            </div>\n        );\n    }\n    return (\n        <div className='cart'>\n            <div className='close'onClick={toggleCart}>[close]</div>\n            <h2>Shopping Cart</h2>\n            {state.cart.length ? (\n                <div>\n                    {state.cart.map(item => (\n                        <CartItem key={item._id} item={item} />\n                    ))}\n                    <div className='flex-row space-between'>\n                        <strong>Total: ${calculateTotal()}</strong>\n                        {\n                            Auth.loggedIn() ?\n                            <button onClick={submitCheckout}>\n                                Checkout\n                            </button>\n                            :\n                            <span>(log in to check out)</span>\n                        }\n                    </div>\n                 </div>\n            ) : (\n                <h3>\n                    <span role='img' arial-label=\"shocked\">\n                    😱\n                    </span>\n                    You haven't added anything to your cart yet!\n                </h3> \n            )}\n        </div>\n    );\n};\n\nexport default Cart;","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from '../components/Cart';\n\nconst Home = () => {\n\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList/>\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport spinner from '../assets/spinner.gif';\n\nimport { useStoreContext } from '../utils/GlobalState';\n\nimport Cart from '../components/Cart';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\n\nimport { idbPromise } from '../utils/helpers';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n\n    // already in global store\n\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } \n    \n    // retrieved from server\n\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, dispatch, id]);\n\n  const addToCart = () => {\n      const itemInCart = cart.find((cartItem) => cartItem._id === id);\n\n      if (itemInCart) {\n        dispatch({\n          type: UPDATE_CART_QUANTITY,\n          _id: id,\n          purchaseQuantity: parseInt(itemInCart.purchaseQuantity) +1\n        });\n\n        // if we're updating quantity, use existing item data and increment purchaseQuantity value by one\n        idbPromise('cart', 'put', {\n          ...itemInCart,\n          purchaseQuantity: parseInt(itemInCart.purchaseQuantity) +1\n        });\n      } else {\n        dispatch({\n           type: ADD_TO_CART,\n         product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n\n      // if product isn't in the cart yet, add it to the current shopping cart in IndexedDB\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n     }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n\n    // upon removal from cart, delete the item from IndexedDB using the `currentProduct._id` to locate what to remove\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n               disabled={!cart.find(p => p._id === currentProduct._id)}\n               onClick={removeFromCart}>\n                Remove from Cart\n                </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n }\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React, {useEffect} from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Jumbotron from '../components/Jumbotron';\nimport {ADD_ORDER} from '../utils/mutations';\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Success() {\n    const [addOrder] = useMutation(ADD_ORDER);\n\n    useEffect(() => {\n        async function saveOrder() {\n            const cart = await idbPromise('cart', 'get');\n            const products = cart.map(item => item._id);\n\n            if (products.length) {\n                const { data } = await addOrder({ variables: { products }});\n                const productData = data.addOrder.products;\n\n                productData.forEach((item) => {\n                    idbPromise('cart', 'delete', item);\n                });\n            }\n            setTimeout(function () {\n                window.location.assign(\"/\")\n            }, 3000);\n        }\n\n        saveOrder();\n    }, [addOrder]);\n    return (\n        <div>\n            <Jumbotron>\n                <h1>Success!</h1>\n                <h2>\n                    Thank you for your purchase!\n                </h2>\n                <h2>\n                    You will now be redirected to the homepage\n                </h2>\n            </Jumbotron>\n        </div>\n    );\n};\n\nexport default Success;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport OrderHistory from './pages/OrderHistory';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/orderHistory\" component={OrderHistory} />\n            <Route exact path=\"/products/:id\" component={Detail} />\n            <Route exact path=\"/success\" component={Success} />\n            <Route component={NoMatch} />\n          </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}